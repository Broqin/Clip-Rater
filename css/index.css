@import url(base.css);
@import url(form.css);

button:disabled {
    background-color: oklch(53.24% 0 124.34);
}

:root {
    --animation-duration: 0.25s;
    --bronze-color: oklch(0.3 0.05 81);
    --gold-color: oklch(0.3 0.05 95);
    --hover-color: oklch(0.25 0 0);
    --silver-color: oklch(0.3 0 0);
    --brand-color: oklch(0.6 0.04 124);
    --background-color: oklch(0.15 0 0);
    --foreground-color: oklch(0.2 0 0);
    --spacing: 0.5rem;
}

a {
    color: var(--brand-color);
    text-decoration: none;
}

body {
    background-color: var(--background-color);
    display: grid;
    grid-template-rows: auto 1fr;
    height: 100vh;
    margin: 0;
    overflow: hidden;
}

caption {
    padding: var(--spacing);
}

dialog {
    background-color: var(--foreground-color);
    border-radius: 0.5rem;
    border-width: 0;
    margin: var(--spacing);
    padding: var(--spacing);
    place-self: center;
}

dialog::backdrop {
    background-color: oklch(0 0 0 / 0.5);
}

dialog[open] {
    display: grid;
    gap: var(--spacing);
}

h1 {
    white-space: nowrap;
}

header {
    padding: var(--spacing);
}

header:has(button) {
    display: grid;
    gap: var(--spacing);
    grid-template-columns: 1fr repeat(var(--button-count, 1), auto);
}

img {
    transition: filter 0.25s;
}

img.loading {
    filter: blur(2px);
}

table {
    width: 100%;
}

tbody tr:hover {
    background-color: oklch(1 0 0 / 0.1);
    transition: background-color 0.25s;
}

#clip {
    grid-template-rows: auto auto 1fr;
    width: min(656px, 100%);
}

#clip > header:first-child {
    grid-column: 1 / -1;
}

#clips {
    grid-template-rows: auto 1fr;
}

#clips table {
    place-self: start stretch;
}

#content {
    display: grid;
    gap: var(--spacing);
    overflow: hidden auto;
    padding: var(--spacing);
    place-content: start stretch;
    max-width: 100vw;
}

#content > section {
    background-color: var(--foreground-color);
}

#header {
    grid-template-columns: 1fr auto;
}

#player {
    place-self: stretch;
}

#playlists table,
#playlist tbody,
#playlists tbody tr {
    display: grid;
}

#playlists tbody a {
    display: block;
    padding: var(--spacing);
}

#playlists tbody tr {
    grid-template-columns: 1fr max-content;
}

#playlists tbody tr.hidden {
    display: none;
}

#settings {
    gap: 0;
    grid-template-areas: "header header" "menu section";
    grid-template-columns: auto 1fr;
    grid-template-rows: auto 1fr;
    height: 50vh;
    padding: 0;
    width: min(100%, 75ch);
}

#settings > header:first-child {
    border-bottom: 1px solid var(--hover-color);
    grid-area: header;
}

#settings menu {
    display: grid;
    border-right: 1px solid var(--hover-color);
    gap: var(--spacing);
    grid-auto-rows: max-content;
    list-style: none;
    margin: 0;
    padding: var(--spacing);
}

#settings menu button {
    text-align: start;
    width: 100%;
}

#settings menu li {
    border-radius: 0.25rem;
    overflow: hidden;
}

#settings > section {
    grid-area: section;
}

#videos {
    display: grid;
    grid-template-rows: auto max-content 1fr auto;
    place-content: start stretch;
}

#videos > header,
#weights > header {
    display: grid;
    grid-template-columns: 1fr auto;
}

#videos table {
    grid-template-rows: auto 1fr;
}

#videos table,
#videos tbody,
#videos thead,
#videos tr:not(.hidden) {
    display: grid;
}

#videos tr:not(.hidden) {
    gap: 0 var(--spacing);
    grid-template-columns: 4ch 120px 1fr 4ch;
    padding: var(--spacing);
}

#videos tbody {
    place-content: start stretch;
}

#videos tr:has(td:empty) {
    grid-template-areas: unset;
    grid-template-columns: none;
}

#videos td:empty {
    grid-area: unset;
}

#videos tbody tr:focus-within {
    background-color: var(--hover-color);
}

#weights {
    display: grid;
    gap: 1px;
    grid-template-rows: auto max-content 1fr auto;
}

#videos.hidden,
#weights.hidden {
    height: 3.5rem;
}

#weights.hidden > :not(header) {
    opacity: 0;
    transition: opacity 0.25s;
}

#weights header:first-child {
    --button-count: 2;
}

#weights ul {
    display: grid;
    gap: 1px;
    height: 100%;
    margin: 0;
    padding: 0;
    place-content: start stretch;
}

#weights output {
    text-align: end;
}

#weights .control input {
    grid-area: input;
}

#weights .control label {
    grid-area: label;
    text-align: start;
}

#weigths .control output {
    grid-area: output;
}

.control.hidden,
.hidden {
    display: none;
}

.icon {
    background-color: transparent;
    border-width: 0;
    color: transparent;
    height: 2.5rem;
    overflow: hidden;
    position: relative;
    width: 2.5rem;
}

.icon::before {
    background-position: center;
    background-repeat: no-repeat;
    background-size: 1.5rem;
    content: "";
    height: 100%;
    inset: 0;
    position: absolute;
    width: 100%;
}

.icon:hover {
    background-color: var(--hover-color);
}

.icon.add::before {
    background-image: url("../images/icons/add.png");
}

.icon.chevron::before {
    background-image: url("../images/icons/chevron.png");
    transition: transform 0.25s;
}

.icon.chevron[value="close"]::before {
    transform: rotate(-90deg);
}

.icon.chevron[value="open"]::before {
    transform: rotate(90deg);
}

.icon.close::before {
    background-image: url("../images/icons/close.png");
}

.icon.delete::before {
    background-image: url("../images/icons/delete.png");
}

.icon.search::before {
    background-image: url("../images//icons/search.png");
}

.icon.tune::before {
    background-image: url("../images/icons/tune.png");
}

.icon.sync::before {
    background-image: url("../images/icons/sync.png");
}

.pills {
    display: flex;
    flex-wrap: wrap;
    gap: var(--spacing);
    list-style: none;
    margin: 0;
    padding: 0;
}

.pills li {
    background-color: var(--background-color);
    border-radius: 0.5rem;
    font-size: 0.75rem;
    text-transform: capitalize;
    padding: var(--spacing);
}

.selected {
    background-color: var(--hover-color);
}

.sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
}

@media (min-width: 1280px) {

    #content {
        grid-template-columns: 1fr auto;
        place-content: stretch;
    }

    #content > section {
        grid-auto-rows: auto;
    }

    #content,
    #videos,
    #videos table,
    #weights,
    #weights form {
        overflow: hidden;
    }

    #videos table,
    #videos tbody {
        height: 100%;
    }

    #videos tbody,
    #weights ul{
        overflow: hidden auto;
    }

    #videos,
    #weights {
        height: 100%;
        transition: height var(--animation-duration);
    }
}