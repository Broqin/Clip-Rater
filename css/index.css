@import url(base.css);

:root {
    --spacing: 0.5rem;
}

body {
    display: grid;
    grid-template-rows: auto 1fr;
    height: 100vh;
    margin: 0;
    overflow: hidden;
}

button {
    padding: var(--spacing);
}

button[type="reset"] {
    background-color: transparent;
    border-color: transparent;
}

h1 {
    white-space: nowrap;
}

header {
    background-color: oklch(1 0 0 / 0.15);
    padding: var(--spacing);
}

header:has(button):first-child {
    display: grid;
    gap: var(--spacing);
    grid-template-columns: 1fr repeat(var(--button-count, 1), auto);
}

dialog {
    padding: var(--spacing);
}

dialog[open] {
    display: grid;
    gap: var(--spacing);
}

form {
    display: grid;
    gap: var(--spacing);
}

form.search {
    background-color: oklch(0 0 0 / 0.5);
    border-radius: 0.5rem;
    gap: 0;
    grid-template-areas: "input reset submit";
    grid-template-columns: 1fr auto auto;
}

form.search button,
form.search input {
    background-color: transparent;
    border: 0;
}

form .buttons {
    display: grid;
    gap: var(--spacing);
    grid-auto-flow: column;
    place-content: end;
}

form .control {
    display: grid;
    gap: var(--spacing);
    grid-template-rows: auto auto;
}

form .control input {
    padding: var(--spacing);
}

form .control input[type="number"] {
    width: 10ch;
}

table {
    width: 100%;
}

tbody tr:hover {
    background-color: oklch(1 0 0 / 0.1);
}

td:nth-child(2) {
    width: 100%;
}

td,
th {
    padding: var(--spacing);
}

tr {
    transition: background-color 0.25s;
}

#clip {
    grid-template-columns: 1fr max-content;
}

#clip form {
    display: grid;
    grid-template-rows: 1fr max-content;
    height: 360px;
}

#clip ul {
    display: grid;
    gap: var(--spacing);
    margin: 0;
    overflow: hidden scroll;
    padding: var(--spacing);
    padding-right: 1rem;
}

#clip>header:first-child {
    grid-column: 1 / -1;
}

#content {
    display: grid;
    gap: var(--spacing);
    padding: var(--spacing)
}

#content > section {
    background-color: oklch(1 0 0 / 0.1);
}

#header {
    grid-template-columns: 1fr auto;
}

#player {
    height: 360px;
    width: 640px;
}

#playlists {
    min-width: 50ch;
}

#ratings tbody tr:hover {
    cursor: pointer;
}

#weights {
    display: grid;
    grid-template-rows: auto 1fr;
    overflow: hidden;
}

#weights form {
    display: grid;
    grid-template-rows: 1fr auto;
    overflow: hidden;
}

#weight input[type="range"] {
    width: 40ch;
}

#weights ol {
    display: grid;
    gap: var(--spacing);
    height: 100%;
    margin: 0;
    overflow: hidden scroll;
    padding: var(--spacing);
}

#weights output {
    text-align: end;
}

#weights .control {
    grid-template-areas: "label output" "input input";
    grid-template-columns: 1fr 2ch;
}

#weights .control input {
    grid-area: input;
}

#weights .control label {
    grid-area: label;
    text-align: start;
}

#weigths .control output {
    grid-area: output;
}

.icon {
    background-position: center;
    background-repeat: no-repeat;
    background-size: 1.5rem;
    color: transparent;
    height: 2.5rem;
    width: 2.5rem;
}

.icon.close {
    background-image: url(/images/icons/close.png);
}

.icon.search {
    background-image: url(/images//icons/search.png);
}

.icon.tune {
    background-image: url(/images/icons/tune.png);
}

.sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
}

@media (min-width: 1280px) {
    #content {
        grid-template-columns: 1fr auto;
        overflow: hidden;
    }
}