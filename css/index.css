@import url(base.css);

button:disabled {
    background-color: oklch(53.24% 0 124.34);
}

:root {
    --bronze-color: oklch(0.25 0.05 81);
    --gold-color: oklch(0.25 0.05 95);
    --hover-color: oklch(0.3 0 0);
    --silver-color: oklch(0.25 0 0);
    --brand-color: oklch(53.24% 0.0424 124.34);
    --background-color: oklch(0.1 0 0);
    --foreground-color: oklch(0.2 0 0);
    --spacing: 0.5rem;
}

body {
    background-color: var(--background-color);
    display: grid;
    grid-template-rows: auto 1fr;
    height: 100vh;
    margin: 0;
    overflow: hidden;
}

button {
    background-color: var(--brand-color);
    border-radius: 0.5rem;
    border-width: 0;
    padding: var(--spacing);
}

button[type="reset"] {
    background-color: transparent;
    border-color: transparent;
}

caption {
    padding: var(--spacing);
}

caption,
header,
tr,
.buttons,
.control {
    background-color: var(--foreground-color);
}

dialog {
    background-color: var(--foreground-color);
    border-radius: 0.5rem;
    border-width: 0;
    margin: var(--spacing);
    min-width: min(50ch, 100%);
    padding: var(--spacing);
    place-self: center;
}

dialog::backdrop {
    background-color: oklch(0 0 0 / 0.5);
}

dialog[open] {
    display: grid;
    gap: var(--spacing);
}

form {
    display: grid;
    gap: var(--spacing);
}

form.search {
    gap: 0;
    grid-template-areas: "input reset submit";
    grid-template-columns: 1fr auto auto;
}

form.search button[type="reset"] {
    border-radius: 0;
}

form.search button[value="add"] {
    border-radius: 0 0.5rem 0.5rem 0;
}

form.search button,
form.search input {
    background-color: var(--background-color);
    border: 0;
}

form.search input {
    border-radius: 0.5rem 0 0 0.5rem;
}

form.search label {
    grid-column: 1 / -1;
}

form .buttons {
    display: grid;
    gap: var(--spacing);
    grid-auto-flow: column;
    place-content: end;
}

form .control {
    display: grid;
    grid-template-rows: auto auto;
}

form .control input[type="number"] {
    width: 10ch;
}

h1 {
    white-space: nowrap;
}

header {
    padding: var(--spacing);
}

header:has(button) {
    display: grid;
    gap: var(--spacing);
    grid-template-columns: 1fr repeat(var(--button-count, 1), auto);
}

img {
    transition: filter 0.25s;
}

img.loading {
    filter: blur(2px);
}

input[type="range"]

input:not([type="checkbox"], [type="radio"], [type="range"], [type="color"]) {
    background-color: var(--background-color);
    border-color: transparent;
    border-radius: 0.5rem;
}

li.control {
    padding-right: 1rem;
}

table {
    width: 100%;
}

table,
tbody,
tr {
    display: grid;
}

table,
tbody {
    gap: 1px;
}

tbody tr {
    grid-template-areas: "rank thumbnail name score" "rank thumbnail medal medal";
    grid-template-columns: max-content max-content 1fr 4ch;
    grid-template-rows: auto 1fr;
}

tbody tr:hover {
    background-color: oklch(1 0 0 / 0.1);
}

tbody tr:nth-child(1) {
    background-color: var(--gold-color);
}
tbody tr:nth-child(2) {
    background-color: var(--silver-color);
}

tbody tr:nth-child(3) {
    background-color: var(--bronze-color);
}

td:has(img) {
    grid-area: thumbnail;
    padding: 0;
}

td:first-child {
    grid-area: rank;
}

td:nth-child(3) {
    grid-area: name;
}

td:last-child {
    background-color: var(--brand-color);
    grid-area: score;
    padding: var(--spacing);
    text-align: center;
}

tr {
    gap: 0 var(--spacing);
    padding: var(--spacing);
    transition: background-color 0.25s;
}

#attributes {
    display: grid;
    grid-template-rows: max-content 1fr max-content;
    overflow: hidden;
}

#attributes ul {
    display: flex;
    flex-wrap: wrap;
    gap: var(--spacing);
    margin: 0;
    overflow: hidden scroll;
    padding: var(--spacing);
    padding-right: 1rem;
}

#clip {
    grid-template-rows: auto auto 1fr;
    width: min(656px, 100%);
}

#clip > header:first-child {
    grid-column: 1 / -1;
}

#clips {
    grid-template-rows: auto 1fr;
}

#clips table {
    place-self: start stretch;
}

#content {
    display: grid;
    gap: var(--spacing);
    overflow: hidden auto;
    padding: var(--spacing);
    place-content: start stretch;
    max-width: 100vw;
}

#content > section {
    display: grid;
    gap: 1px;
}

#header {
    grid-template-columns: 1fr auto;
}

#player {
    place-self: stretch;
}

#playlists input:placeholder-shown ~ button[type="reset"] {
    background-size: 0 0;
}

#playlists ul {
    display: flex;
    gap: var(--spacing);
    list-style: none;
    margin: 0;
    padding: var(--spacing);
}

#rankings {
    grid-template-rows: auto 1fr;
}

#rankings tbody {
    place-content: start stretch;
}

#rankings tbody tr {
    grid-template-areas: "rank thumbnail name score" "rank thumbnail medal medal";
    grid-template-columns: 4ch max-content 1fr 4ch;
    grid-template-rows: minmax(2.5rem, auto) 1fr;
}

#rankings tbody tr:hover {
    cursor: pointer;
}

#weights {
    display: grid;
    gap: 1px;
    grid-template-rows: auto auto 1fr auto;
}

#weights header:first-child {
    --button-count: 2;
}

#weights ul {
    display: grid;
    gap: 1px;
    height: 100%;
    margin: 0;
    padding: 0;
    place-content: start stretch;
}

#weights output {
    text-align: end;
}

#weights .control {
    grid-template-areas: "label output" "input input";
    grid-template-columns: 1fr 2ch;
}

#weights .control input {
    grid-area: input;
}

#weights .control label {
    grid-area: label;
    text-align: start;
}

#weigths .control output {
    grid-area: output;
}

.buttons {
    padding: var(--spacing);
}

.control {
    padding: var(--spacing);
}

.icon {
    background-color: transparent;
    border-width: 0;
    color: transparent;
    height: 2.5rem;
    position: relative;
    width: 2.5rem;
}

.icon::before {
    background-position: center;
    background-repeat: no-repeat;
    background-size: 1.5rem;
    content: "";
    height: 100%;
    inset: 0;
    position: absolute;
    width: 100%;
}

.icon:hover {
    background-color: var(--hover-color);
}

.icon.add::before {
    background-image: url("../images/icons/add.png");
}

.icon.chevron::before {
    background-image: url("../images/icons/chevron.png");
    transition: transform 0.25s;
}

.icon.chevron[value="close"]::before {
    transform: rotate(-90deg);
}

.icon.chevron[value="open"]::before {
    transform: rotate(90deg);
}

.icon.close::before {
    background-image: url("../images/icons/close.png");
}

.icon.search::before {
    background-image: url("../images//icons/search.png");
}

.icon.tune::before {
    background-image: url("../images/icons/tune.png");
}

.pills {
    display: flex;
    flex-wrap: wrap;
    gap: var(--spacing);
    list-style: none;
    margin: 0;
    padding: 0;
}

.pills li {
    background-color: var(--background-color);
    border-radius: 0.5rem;
    font-size: 0.75rem;
    text-transform: capitalize;
    padding: var(--spacing);
}

.sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
}

@media (min-width: 1280px) {

    #content {
        grid-template-columns: 1fr 15rem;
        place-content: stretch;
    }

    #content,
    #rankings,
    #weights,
    #weights form {
        overflow: hidden;
    }

    #rankings tbody {
        min-height: 5rem;
    }

    #rankings tbody,
    #weights ul{
        overflow: hidden auto;
    }
}