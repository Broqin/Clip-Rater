@import url(base.css);

:root {
    --spacing: 0.5rem;
}

body {
    height: 100vh;
    margin: 0;
}

button {
    padding: var(--spacing);
}

button[type="reset"] {
    background-color: transparent;
    border-color: transparent;
}

dialog {
    width: min(65ch, 100%);
}

header {
    background-color: oklch(1 0 0 / 0.2);
    padding: var(--spacing);
}

header:has(button):first-child {
    display: grid;
    gap: var(--spacing);
    grid-template-columns: minmax(max-content, 1fr) repeat(var(--button-count, 1), max-content);
}

dialog[open] {
    display: grid;
    gap: var(--spacing);
}

form {
    display: grid;
    gap: var(--spacing);
}

form .buttons {
    display: grid;
    gap: var(--spacing);
    grid-auto-flow: column;
    place-content: end;
}

form .control {
    display: grid;
    gap: var(--spacing);
    grid-template-columns: 15ch auto;
}

form .control label {
    text-align: end;
}

form .control input {
    padding: var(--spacing);
}

form .control input[type="number"] {
    width: 10ch;
}

main {
    margin: 0 auto;
    width: min(75ch, 100%);
}

main > header:first-child {
    --button-count: 2;
}

table {
    width: 100%;
}

tbody tr:hover {
    background-color: oklch(1 0 0 / 0.1);
}

td:nth-child(3) {
    width: 100%;
}

td,
th {
    padding: var(--spacing);
}

tr {
    transition: background-color 0.25s;
}

#clip {
    width: min(40ch, 100%);
}

#ratings tbody tr:hover {
    cursor: pointer;
}

#weight input[type="range"] {
    width: 40ch;
}

#weights ol {
    display: grid;
    gap: var(--spacing);
    margin: 0;
    padding: var(--spacing);
}

#weights ol li {
    display: grid;
    gap: var(--spacing);
    grid-template-columns: 12ch 1fr 2ch;
}

#weights output {
    text-align: end;
}